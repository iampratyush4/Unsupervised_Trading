{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!pip install pandas_ta yfinance","metadata":{"execution":{"iopub.status.busy":"2024-07-09T17:57:36.477022Z","iopub.execute_input":"2024-07-09T17:57:36.477394Z","iopub.status.idle":"2024-07-09T17:58:13.541937Z","shell.execute_reply.started":"2024-07-09T17:57:36.477368Z","shell.execute_reply":"2024-07-09T17:58:13.540619Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"Collecting pandas_ta\n  Downloading pandas_ta-0.3.14b.tar.gz (115 kB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m115.1/115.1 kB\u001b[0m \u001b[31m4.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25ldone\n\u001b[?25hCollecting yfinance\n  Downloading yfinance-0.2.40-py2.py3-none-any.whl.metadata (11 kB)\nRequirement already satisfied: pandas in /opt/conda/lib/python3.10/site-packages (from pandas_ta) (2.2.2)\nRequirement already satisfied: numpy>=1.16.5 in /opt/conda/lib/python3.10/site-packages (from yfinance) (1.26.4)\nRequirement already satisfied: requests>=2.31 in /opt/conda/lib/python3.10/site-packages (from yfinance) (2.32.3)\nCollecting multitasking>=0.0.7 (from yfinance)\n  Downloading multitasking-0.0.11-py3-none-any.whl.metadata (5.5 kB)\nRequirement already satisfied: lxml>=4.9.1 in /opt/conda/lib/python3.10/site-packages (from yfinance) (5.2.2)\nRequirement already satisfied: platformdirs>=2.0.0 in /opt/conda/lib/python3.10/site-packages (from yfinance) (3.11.0)\nRequirement already satisfied: pytz>=2022.5 in /opt/conda/lib/python3.10/site-packages (from yfinance) (2023.3.post1)\nRequirement already satisfied: frozendict>=2.3.4 in /opt/conda/lib/python3.10/site-packages (from yfinance) (2.4.4)\nCollecting peewee>=3.16.2 (from yfinance)\n  Downloading peewee-3.17.6.tar.gz (3.0 MB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.0/3.0 MB\u001b[0m \u001b[31m57.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m\n\u001b[?25h  Installing build dependencies ... \u001b[?25ldone\n\u001b[?25h  Getting requirements to build wheel ... \u001b[?25ldone\n\u001b[?25h  Preparing metadata (pyproject.toml) ... \u001b[?25ldone\n\u001b[?25hRequirement already satisfied: beautifulsoup4>=4.11.1 in /opt/conda/lib/python3.10/site-packages (from yfinance) (4.12.2)\nRequirement already satisfied: html5lib>=1.1 in /opt/conda/lib/python3.10/site-packages (from yfinance) (1.1)\nRequirement already satisfied: soupsieve>1.2 in /opt/conda/lib/python3.10/site-packages (from beautifulsoup4>=4.11.1->yfinance) (2.5)\nRequirement already satisfied: six>=1.9 in /opt/conda/lib/python3.10/site-packages (from html5lib>=1.1->yfinance) (1.16.0)\nRequirement already satisfied: webencodings in /opt/conda/lib/python3.10/site-packages (from html5lib>=1.1->yfinance) (0.5.1)\nRequirement already satisfied: python-dateutil>=2.8.2 in /opt/conda/lib/python3.10/site-packages (from pandas->pandas_ta) (2.9.0.post0)\nRequirement already satisfied: tzdata>=2022.7 in /opt/conda/lib/python3.10/site-packages (from pandas->pandas_ta) (2023.4)\nRequirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests>=2.31->yfinance) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests>=2.31->yfinance) (3.6)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /opt/conda/lib/python3.10/site-packages (from requests>=2.31->yfinance) (1.26.18)\nRequirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests>=2.31->yfinance) (2024.2.2)\nDownloading yfinance-0.2.40-py2.py3-none-any.whl (73 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m73.5/73.5 kB\u001b[0m \u001b[31m3.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading multitasking-0.0.11-py3-none-any.whl (8.5 kB)\nBuilding wheels for collected packages: pandas_ta, peewee\n  Building wheel for pandas_ta (setup.py) ... \u001b[?25ldone\n\u001b[?25h  Created wheel for pandas_ta: filename=pandas_ta-0.3.14b0-py3-none-any.whl size=218910 sha256=2331ab88a451a40738a3eb4546d0a243c30388db24fc2fd562fd4ae15d3e7774\n  Stored in directory: /root/.cache/pip/wheels/69/00/ac/f7fa862c34b0e2ef320175100c233377b4c558944f12474cf0\n  Building wheel for peewee (pyproject.toml) ... \u001b[?25ldone\n\u001b[?25h  Created wheel for peewee: filename=peewee-3.17.6-cp310-cp310-linux_x86_64.whl size=293634 sha256=de3abcb3f7bede4f646cd1566191c2400234718be194394b43de9e08c88ab0dc\n  Stored in directory: /root/.cache/pip/wheels/4b/b9/b0/83d6e258e8f963f5ff111a2cd8c483ca59372a86e6a2535212\nSuccessfully built pandas_ta peewee\nInstalling collected packages: peewee, multitasking, yfinance, pandas_ta\nSuccessfully installed multitasking-0.0.11 pandas_ta-0.3.14b0 peewee-3.17.6 yfinance-0.2.40\n","output_type":"stream"}]},{"cell_type":"code","source":"from statsmodels.regression.rolling import RollingOLS\nimport pandas_datareader.data as web\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\nimport pandas as pd\nimport numpy as np\nimport datetime as dt\nimport pandas_ta\nimport warnings\nimport yfinance as yf\nwarnings.filterwarnings('ignore')","metadata":{"execution":{"iopub.status.busy":"2024-07-09T17:58:13.544017Z","iopub.execute_input":"2024-07-09T17:58:13.544363Z","iopub.status.idle":"2024-07-09T17:58:14.163808Z","shell.execute_reply.started":"2024-07-09T17:58:13.544330Z","shell.execute_reply":"2024-07-09T17:58:14.162949Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"code","source":"sp500 = pd.read_html('https://en.wikipedia.org/wiki/List_of_S%26P_500_companies')[0]\nsp500\n# this gets list of s&p500 stocks from this html page and then stores it in sp500 variable","metadata":{"execution":{"iopub.status.busy":"2024-07-09T17:58:17.697481Z","iopub.execute_input":"2024-07-09T17:58:17.698584Z","iopub.status.idle":"2024-07-09T17:58:17.937765Z","shell.execute_reply.started":"2024-07-09T17:58:17.698549Z","shell.execute_reply":"2024-07-09T17:58:17.936581Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"    Symbol            Security             GICS Sector  \\\n0      MMM                  3M             Industrials   \n1      AOS         A. O. Smith             Industrials   \n2      ABT              Abbott             Health Care   \n3     ABBV              AbbVie             Health Care   \n4      ACN           Accenture  Information Technology   \n..     ...                 ...                     ...   \n497    XYL          Xylem Inc.             Industrials   \n498    YUM         Yum! Brands  Consumer Discretionary   \n499   ZBRA  Zebra Technologies  Information Technology   \n500    ZBH       Zimmer Biomet             Health Care   \n501    ZTS              Zoetis             Health Care   \n\n                                GICS Sub-Industry    Headquarters Location  \\\n0                        Industrial Conglomerates    Saint Paul, Minnesota   \n1                               Building Products     Milwaukee, Wisconsin   \n2                           Health Care Equipment  North Chicago, Illinois   \n3                                   Biotechnology  North Chicago, Illinois   \n4                  IT Consulting & Other Services          Dublin, Ireland   \n..                                            ...                      ...   \n497  Industrial Machinery & Supplies & Components   White Plains, New York   \n498                                   Restaurants     Louisville, Kentucky   \n499            Electronic Equipment & Instruments   Lincolnshire, Illinois   \n500                         Health Care Equipment          Warsaw, Indiana   \n501                               Pharmaceuticals   Parsippany, New Jersey   \n\n     Date added      CIK      Founded  \n0    1957-03-04    66740         1902  \n1    2017-07-26    91142         1916  \n2    1957-03-04     1800         1888  \n3    2012-12-31  1551152  2013 (1888)  \n4    2011-07-06  1467373         1989  \n..          ...      ...          ...  \n497  2011-11-01  1524472         2011  \n498  1997-10-06  1041061         1997  \n499  2019-12-23   877212         1969  \n500  2001-08-07  1136869         1927  \n501  2013-06-21  1555280         1952  \n\n[502 rows x 8 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Symbol</th>\n      <th>Security</th>\n      <th>GICS Sector</th>\n      <th>GICS Sub-Industry</th>\n      <th>Headquarters Location</th>\n      <th>Date added</th>\n      <th>CIK</th>\n      <th>Founded</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>MMM</td>\n      <td>3M</td>\n      <td>Industrials</td>\n      <td>Industrial Conglomerates</td>\n      <td>Saint Paul, Minnesota</td>\n      <td>1957-03-04</td>\n      <td>66740</td>\n      <td>1902</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>AOS</td>\n      <td>A. O. Smith</td>\n      <td>Industrials</td>\n      <td>Building Products</td>\n      <td>Milwaukee, Wisconsin</td>\n      <td>2017-07-26</td>\n      <td>91142</td>\n      <td>1916</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>ABT</td>\n      <td>Abbott</td>\n      <td>Health Care</td>\n      <td>Health Care Equipment</td>\n      <td>North Chicago, Illinois</td>\n      <td>1957-03-04</td>\n      <td>1800</td>\n      <td>1888</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>ABBV</td>\n      <td>AbbVie</td>\n      <td>Health Care</td>\n      <td>Biotechnology</td>\n      <td>North Chicago, Illinois</td>\n      <td>2012-12-31</td>\n      <td>1551152</td>\n      <td>2013 (1888)</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>ACN</td>\n      <td>Accenture</td>\n      <td>Information Technology</td>\n      <td>IT Consulting &amp; Other Services</td>\n      <td>Dublin, Ireland</td>\n      <td>2011-07-06</td>\n      <td>1467373</td>\n      <td>1989</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>497</th>\n      <td>XYL</td>\n      <td>Xylem Inc.</td>\n      <td>Industrials</td>\n      <td>Industrial Machinery &amp; Supplies &amp; Components</td>\n      <td>White Plains, New York</td>\n      <td>2011-11-01</td>\n      <td>1524472</td>\n      <td>2011</td>\n    </tr>\n    <tr>\n      <th>498</th>\n      <td>YUM</td>\n      <td>Yum! Brands</td>\n      <td>Consumer Discretionary</td>\n      <td>Restaurants</td>\n      <td>Louisville, Kentucky</td>\n      <td>1997-10-06</td>\n      <td>1041061</td>\n      <td>1997</td>\n    </tr>\n    <tr>\n      <th>499</th>\n      <td>ZBRA</td>\n      <td>Zebra Technologies</td>\n      <td>Information Technology</td>\n      <td>Electronic Equipment &amp; Instruments</td>\n      <td>Lincolnshire, Illinois</td>\n      <td>2019-12-23</td>\n      <td>877212</td>\n      <td>1969</td>\n    </tr>\n    <tr>\n      <th>500</th>\n      <td>ZBH</td>\n      <td>Zimmer Biomet</td>\n      <td>Health Care</td>\n      <td>Health Care Equipment</td>\n      <td>Warsaw, Indiana</td>\n      <td>2001-08-07</td>\n      <td>1136869</td>\n      <td>1927</td>\n    </tr>\n    <tr>\n      <th>501</th>\n      <td>ZTS</td>\n      <td>Zoetis</td>\n      <td>Health Care</td>\n      <td>Pharmaceuticals</td>\n      <td>Parsippany, New Jersey</td>\n      <td>2013-06-21</td>\n      <td>1555280</td>\n      <td>1952</td>\n    </tr>\n  </tbody>\n</table>\n<p>502 rows × 8 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"sp500['Symbol'] = sp500['Symbol'].str.replace('.', '-')","metadata":{"execution":{"iopub.status.busy":"2024-07-09T17:58:30.560117Z","iopub.execute_input":"2024-07-09T17:58:30.561062Z","iopub.status.idle":"2024-07-09T17:58:30.566581Z","shell.execute_reply.started":"2024-07-09T17:58:30.561026Z","shell.execute_reply":"2024-07-09T17:58:30.565535Z"},"trusted":true},"execution_count":9,"outputs":[]}]}
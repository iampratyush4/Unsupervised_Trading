{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!pip install pandas_ta yfinance","metadata":{"execution":{"iopub.status.busy":"2024-07-09T17:57:36.477022Z","iopub.execute_input":"2024-07-09T17:57:36.477394Z","iopub.status.idle":"2024-07-09T17:58:13.541937Z","shell.execute_reply.started":"2024-07-09T17:57:36.477368Z","shell.execute_reply":"2024-07-09T17:58:13.540619Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"Collecting pandas_ta\n  Downloading pandas_ta-0.3.14b.tar.gz (115 kB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m115.1/115.1 kB\u001b[0m \u001b[31m4.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25ldone\n\u001b[?25hCollecting yfinance\n  Downloading yfinance-0.2.40-py2.py3-none-any.whl.metadata (11 kB)\nRequirement already satisfied: pandas in /opt/conda/lib/python3.10/site-packages (from pandas_ta) (2.2.2)\nRequirement already satisfied: numpy>=1.16.5 in /opt/conda/lib/python3.10/site-packages (from yfinance) (1.26.4)\nRequirement already satisfied: requests>=2.31 in /opt/conda/lib/python3.10/site-packages (from yfinance) (2.32.3)\nCollecting multitasking>=0.0.7 (from yfinance)\n  Downloading multitasking-0.0.11-py3-none-any.whl.metadata (5.5 kB)\nRequirement already satisfied: lxml>=4.9.1 in /opt/conda/lib/python3.10/site-packages (from yfinance) (5.2.2)\nRequirement already satisfied: platformdirs>=2.0.0 in /opt/conda/lib/python3.10/site-packages (from yfinance) (3.11.0)\nRequirement already satisfied: pytz>=2022.5 in /opt/conda/lib/python3.10/site-packages (from yfinance) (2023.3.post1)\nRequirement already satisfied: frozendict>=2.3.4 in /opt/conda/lib/python3.10/site-packages (from yfinance) (2.4.4)\nCollecting peewee>=3.16.2 (from yfinance)\n  Downloading peewee-3.17.6.tar.gz (3.0 MB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.0/3.0 MB\u001b[0m \u001b[31m57.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m\n\u001b[?25h  Installing build dependencies ... \u001b[?25ldone\n\u001b[?25h  Getting requirements to build wheel ... \u001b[?25ldone\n\u001b[?25h  Preparing metadata (pyproject.toml) ... \u001b[?25ldone\n\u001b[?25hRequirement already satisfied: beautifulsoup4>=4.11.1 in /opt/conda/lib/python3.10/site-packages (from yfinance) (4.12.2)\nRequirement already satisfied: html5lib>=1.1 in /opt/conda/lib/python3.10/site-packages (from yfinance) (1.1)\nRequirement already satisfied: soupsieve>1.2 in /opt/conda/lib/python3.10/site-packages (from beautifulsoup4>=4.11.1->yfinance) (2.5)\nRequirement already satisfied: six>=1.9 in /opt/conda/lib/python3.10/site-packages (from html5lib>=1.1->yfinance) (1.16.0)\nRequirement already satisfied: webencodings in /opt/conda/lib/python3.10/site-packages (from html5lib>=1.1->yfinance) (0.5.1)\nRequirement already satisfied: python-dateutil>=2.8.2 in /opt/conda/lib/python3.10/site-packages (from pandas->pandas_ta) (2.9.0.post0)\nRequirement already satisfied: tzdata>=2022.7 in /opt/conda/lib/python3.10/site-packages (from pandas->pandas_ta) (2023.4)\nRequirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests>=2.31->yfinance) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests>=2.31->yfinance) (3.6)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /opt/conda/lib/python3.10/site-packages (from requests>=2.31->yfinance) (1.26.18)\nRequirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests>=2.31->yfinance) (2024.2.2)\nDownloading yfinance-0.2.40-py2.py3-none-any.whl (73 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m73.5/73.5 kB\u001b[0m \u001b[31m3.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading multitasking-0.0.11-py3-none-any.whl (8.5 kB)\nBuilding wheels for collected packages: pandas_ta, peewee\n  Building wheel for pandas_ta (setup.py) ... \u001b[?25ldone\n\u001b[?25h  Created wheel for pandas_ta: filename=pandas_ta-0.3.14b0-py3-none-any.whl size=218910 sha256=2331ab88a451a40738a3eb4546d0a243c30388db24fc2fd562fd4ae15d3e7774\n  Stored in directory: /root/.cache/pip/wheels/69/00/ac/f7fa862c34b0e2ef320175100c233377b4c558944f12474cf0\n  Building wheel for peewee (pyproject.toml) ... \u001b[?25ldone\n\u001b[?25h  Created wheel for peewee: filename=peewee-3.17.6-cp310-cp310-linux_x86_64.whl size=293634 sha256=de3abcb3f7bede4f646cd1566191c2400234718be194394b43de9e08c88ab0dc\n  Stored in directory: /root/.cache/pip/wheels/4b/b9/b0/83d6e258e8f963f5ff111a2cd8c483ca59372a86e6a2535212\nSuccessfully built pandas_ta peewee\nInstalling collected packages: peewee, multitasking, yfinance, pandas_ta\nSuccessfully installed multitasking-0.0.11 pandas_ta-0.3.14b0 peewee-3.17.6 yfinance-0.2.40\n","output_type":"stream"}]},{"cell_type":"code","source":"from statsmodels.regression.rolling import RollingOLS\nimport pandas_datareader.data as web\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\nimport pandas as pd\nimport numpy as np\nimport datetime as dt\nimport pandas_ta\nimport warnings\nimport yfinance as yf\nwarnings.filterwarnings('ignore')","metadata":{"execution":{"iopub.status.busy":"2024-07-09T17:58:13.544017Z","iopub.execute_input":"2024-07-09T17:58:13.544363Z","iopub.status.idle":"2024-07-09T17:58:14.163808Z","shell.execute_reply.started":"2024-07-09T17:58:13.544330Z","shell.execute_reply":"2024-07-09T17:58:14.162949Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"code","source":"sp500 = pd.read_html('https://en.wikipedia.org/wiki/List_of_S%26P_500_companies')[0]\nsp500\n# this gets list of s&p500 stocks from this html page and then stores it in sp500 variable","metadata":{"execution":{"iopub.status.busy":"2024-07-09T17:58:17.697481Z","iopub.execute_input":"2024-07-09T17:58:17.698584Z","iopub.status.idle":"2024-07-09T17:58:17.937765Z","shell.execute_reply.started":"2024-07-09T17:58:17.698549Z","shell.execute_reply":"2024-07-09T17:58:17.936581Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"    Symbol            Security             GICS Sector  \\\n0      MMM                  3M             Industrials   \n1      AOS         A. O. Smith             Industrials   \n2      ABT              Abbott             Health Care   \n3     ABBV              AbbVie             Health Care   \n4      ACN           Accenture  Information Technology   \n..     ...                 ...                     ...   \n497    XYL          Xylem Inc.             Industrials   \n498    YUM         Yum! Brands  Consumer Discretionary   \n499   ZBRA  Zebra Technologies  Information Technology   \n500    ZBH       Zimmer Biomet             Health Care   \n501    ZTS              Zoetis             Health Care   \n\n                                GICS Sub-Industry    Headquarters Location  \\\n0                        Industrial Conglomerates    Saint Paul, Minnesota   \n1                               Building Products     Milwaukee, Wisconsin   \n2                           Health Care Equipment  North Chicago, Illinois   \n3                                   Biotechnology  North Chicago, Illinois   \n4                  IT Consulting & Other Services          Dublin, Ireland   \n..                                            ...                      ...   \n497  Industrial Machinery & Supplies & Components   White Plains, New York   \n498                                   Restaurants     Louisville, Kentucky   \n499            Electronic Equipment & Instruments   Lincolnshire, Illinois   \n500                         Health Care Equipment          Warsaw, Indiana   \n501                               Pharmaceuticals   Parsippany, New Jersey   \n\n     Date added      CIK      Founded  \n0    1957-03-04    66740         1902  \n1    2017-07-26    91142         1916  \n2    1957-03-04     1800         1888  \n3    2012-12-31  1551152  2013 (1888)  \n4    2011-07-06  1467373         1989  \n..          ...      ...          ...  \n497  2011-11-01  1524472         2011  \n498  1997-10-06  1041061         1997  \n499  2019-12-23   877212         1969  \n500  2001-08-07  1136869         1927  \n501  2013-06-21  1555280         1952  \n\n[502 rows x 8 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Symbol</th>\n      <th>Security</th>\n      <th>GICS Sector</th>\n      <th>GICS Sub-Industry</th>\n      <th>Headquarters Location</th>\n      <th>Date added</th>\n      <th>CIK</th>\n      <th>Founded</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>MMM</td>\n      <td>3M</td>\n      <td>Industrials</td>\n      <td>Industrial Conglomerates</td>\n      <td>Saint Paul, Minnesota</td>\n      <td>1957-03-04</td>\n      <td>66740</td>\n      <td>1902</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>AOS</td>\n      <td>A. O. Smith</td>\n      <td>Industrials</td>\n      <td>Building Products</td>\n      <td>Milwaukee, Wisconsin</td>\n      <td>2017-07-26</td>\n      <td>91142</td>\n      <td>1916</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>ABT</td>\n      <td>Abbott</td>\n      <td>Health Care</td>\n      <td>Health Care Equipment</td>\n      <td>North Chicago, Illinois</td>\n      <td>1957-03-04</td>\n      <td>1800</td>\n      <td>1888</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>ABBV</td>\n      <td>AbbVie</td>\n      <td>Health Care</td>\n      <td>Biotechnology</td>\n      <td>North Chicago, Illinois</td>\n      <td>2012-12-31</td>\n      <td>1551152</td>\n      <td>2013 (1888)</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>ACN</td>\n      <td>Accenture</td>\n      <td>Information Technology</td>\n      <td>IT Consulting &amp; Other Services</td>\n      <td>Dublin, Ireland</td>\n      <td>2011-07-06</td>\n      <td>1467373</td>\n      <td>1989</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>497</th>\n      <td>XYL</td>\n      <td>Xylem Inc.</td>\n      <td>Industrials</td>\n      <td>Industrial Machinery &amp; Supplies &amp; Components</td>\n      <td>White Plains, New York</td>\n      <td>2011-11-01</td>\n      <td>1524472</td>\n      <td>2011</td>\n    </tr>\n    <tr>\n      <th>498</th>\n      <td>YUM</td>\n      <td>Yum! Brands</td>\n      <td>Consumer Discretionary</td>\n      <td>Restaurants</td>\n      <td>Louisville, Kentucky</td>\n      <td>1997-10-06</td>\n      <td>1041061</td>\n      <td>1997</td>\n    </tr>\n    <tr>\n      <th>499</th>\n      <td>ZBRA</td>\n      <td>Zebra Technologies</td>\n      <td>Information Technology</td>\n      <td>Electronic Equipment &amp; Instruments</td>\n      <td>Lincolnshire, Illinois</td>\n      <td>2019-12-23</td>\n      <td>877212</td>\n      <td>1969</td>\n    </tr>\n    <tr>\n      <th>500</th>\n      <td>ZBH</td>\n      <td>Zimmer Biomet</td>\n      <td>Health Care</td>\n      <td>Health Care Equipment</td>\n      <td>Warsaw, Indiana</td>\n      <td>2001-08-07</td>\n      <td>1136869</td>\n      <td>1927</td>\n    </tr>\n    <tr>\n      <th>501</th>\n      <td>ZTS</td>\n      <td>Zoetis</td>\n      <td>Health Care</td>\n      <td>Pharmaceuticals</td>\n      <td>Parsippany, New Jersey</td>\n      <td>2013-06-21</td>\n      <td>1555280</td>\n      <td>1952</td>\n    </tr>\n  </tbody>\n</table>\n<p>502 rows × 8 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"sp500['Symbol'] = sp500['Symbol'].str.replace('.', '-')\nsp500['Symbol']","metadata":{"execution":{"iopub.status.busy":"2024-07-09T17:59:06.161676Z","iopub.execute_input":"2024-07-09T17:59:06.162585Z","iopub.status.idle":"2024-07-09T17:59:06.172188Z","shell.execute_reply.started":"2024-07-09T17:59:06.162551Z","shell.execute_reply":"2024-07-09T17:59:06.171027Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"0       MMM\n1       AOS\n2       ABT\n3      ABBV\n4       ACN\n       ... \n497     XYL\n498     YUM\n499    ZBRA\n500     ZBH\n501     ZTS\nName: Symbol, Length: 502, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"symbols_list = sp500['Symbol'].unique().tolist()\n\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T18:01:53.375036Z","iopub.execute_input":"2024-07-09T18:01:53.375437Z","iopub.status.idle":"2024-07-09T18:01:53.380520Z","shell.execute_reply.started":"2024-07-09T18:01:53.375406Z","shell.execute_reply":"2024-07-09T18:01:53.379215Z"},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"code","source":"end_date = '2024-06-30' \n# end date takes a date and then in the start date we will take 8 years back, so that we can get data for ast 8 years\n\nstart_date = pd.to_datetime(end_date)-pd.DateOffset(365*8)\nstart_date","metadata":{"execution":{"iopub.status.busy":"2024-07-09T18:05:05.176155Z","iopub.execute_input":"2024-07-09T18:05:05.176628Z","iopub.status.idle":"2024-07-09T18:05:05.184816Z","shell.execute_reply.started":"2024-07-09T18:05:05.176595Z","shell.execute_reply":"2024-07-09T18:05:05.183720Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"Timestamp('2016-07-02 00:00:00')"},"metadata":{}}]},{"cell_type":"code","source":"df = yf.download(tickers=symbols_list,\n                 start=start_date,\n                 end=end_date)\n\n# this is a yfiannce functionality ","metadata":{"execution":{"iopub.status.busy":"2024-07-09T18:42:12.066098Z","iopub.execute_input":"2024-07-09T18:42:12.066491Z","iopub.status.idle":"2024-07-09T18:42:42.699732Z","shell.execute_reply.started":"2024-07-09T18:42:12.066463Z","shell.execute_reply":"2024-07-09T18:42:42.698620Z"},"trusted":true},"execution_count":33,"outputs":[{"name":"stderr","text":"[*********************100%%**********************]  502 of 502 completed\n","output_type":"stream"}]},{"cell_type":"code","source":"df\n# this print all data but the format is not so good so we will be required to change it to diffrent format","metadata":{"execution":{"iopub.status.busy":"2024-07-09T18:42:49.365376Z","iopub.execute_input":"2024-07-09T18:42:49.365775Z","iopub.status.idle":"2024-07-09T18:42:49.402849Z","shell.execute_reply.started":"2024-07-09T18:42:49.365738Z","shell.execute_reply":"2024-07-09T18:42:49.401874Z"},"trusted":true},"execution_count":34,"outputs":[{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"Price        Adj Close                                                 \\\nTicker               A        AAL        AAPL        ABBV        ABNB   \nDate                                                                    \n2016-07-05   41.086147  27.802404   21.811762   43.881737         NaN   \n2016-07-06   41.762302  27.245010   21.935753   44.909328         NaN   \n2016-07-07   41.715351  28.254087   22.029907   44.951851         NaN   \n2016-07-08   42.710800  28.869143   22.199829   45.469181         NaN   \n2016-07-11   42.635677  29.945484   22.268707   45.603828         NaN   \n...                ...        ...         ...         ...         ...   \n2024-06-24  134.829773  11.160000  208.139999  172.740005  148.389999   \n2024-06-25  134.440491  11.130000  209.070007  170.750000  150.910004   \n2024-06-26  132.843460  11.120000  213.250000  171.149994  150.000000   \n2024-06-27  130.557709  11.280000  214.100006  168.990005  151.610001   \n2024-06-28  129.389877  11.330000  210.619995  171.520004  151.630005   \n\nPrice                                                                   ...  \\\nTicker             ABT        ACGL         ACN        ADBE         ADI  ...   \nDate                                                                    ...   \n2016-07-05   34.040821   23.633333   99.734428   94.730003   47.280487  ...   \n2016-07-06   35.240551   23.583332  100.104797   95.180000   47.365887  ...   \n2016-07-07   35.698002   23.530001   99.381676   95.139999   47.784378  ...   \n2016-07-08   36.155430   23.590000  101.506905   96.790001   49.313137  ...   \n2016-07-11   36.353951   23.583332  101.815514   97.139999   49.748714  ...   \n...                ...         ...         ...         ...         ...  ...   \n2024-06-24  105.300003  102.430000  307.209991  524.169983  228.460007  ...   \n2024-06-25  105.489998  102.150002  307.170013  526.880005  230.339996  ...   \n2024-06-26  104.879997   99.769997  304.619995  528.659973  227.839996  ...   \n2024-06-27  104.650002  101.019997  303.190002  546.760010  226.679993  ...   \n2024-06-28  103.910004  100.889999  303.410004  555.539978  228.259995  ...   \n\nPrice       Volume                                                          \\\nTicker         WTW        WY     WYNN      XEL       XOM      XYL      YUM   \nDate                                                                         \n2016-07-05  761400  12197600  2405100  3443800  10744100  1519300  3534670   \n2016-07-06  749900   4701500  2133700  3545100  13144400  1487000  4323089   \n2016-07-07  591100   4601500  1999500  4183700  12240700  1499400  4921497   \n2016-07-08  692800   5302700  2006400  4825900   9807600  1109100  5619918   \n2016-07-11  482600   7476100  4057100  3224900   8335700  1176500  4482080   \n...            ...       ...      ...      ...       ...      ...      ...   \n2024-06-24  706400   2856200  1828400  2705300  16266700  1181300  2477100   \n2024-06-25  432800   3150100  1489200  2312100  16213700  1218000  2367100   \n2024-06-26  660900   3118800  1089700  2662900  15771800  1246700  1392500   \n2024-06-27  414500   3772000  1266600  2470800  16812700   829900  1355500   \n2024-06-28  784100   5567500  2199400  3726700  24565900  2197600  5819000   \n\nPrice                                  \nTicker          ZBH     ZBRA      ZTS  \nDate                                   \n2016-07-05  1225082   994500  2655400  \n2016-07-06  1892934  1239900  3451600  \n2016-07-07  1528108  1104400  2338000  \n2016-07-08  1411512   743700  2852000  \n2016-07-11  1256909   469100  2011600  \n...             ...      ...      ...  \n2024-06-24  1600000   428200  1885900  \n2024-06-25  1339000   319000  2293400  \n2024-06-26  2006000   264800  2053800  \n2024-06-27  2052500   303700  4164700  \n2024-06-28  2774600   417900  4189600  \n\n[2010 rows x 3012 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th>Price</th>\n      <th colspan=\"10\" halign=\"left\">Adj Close</th>\n      <th>...</th>\n      <th colspan=\"10\" halign=\"left\">Volume</th>\n    </tr>\n    <tr>\n      <th>Ticker</th>\n      <th>A</th>\n      <th>AAL</th>\n      <th>AAPL</th>\n      <th>ABBV</th>\n      <th>ABNB</th>\n      <th>ABT</th>\n      <th>ACGL</th>\n      <th>ACN</th>\n      <th>ADBE</th>\n      <th>ADI</th>\n      <th>...</th>\n      <th>WTW</th>\n      <th>WY</th>\n      <th>WYNN</th>\n      <th>XEL</th>\n      <th>XOM</th>\n      <th>XYL</th>\n      <th>YUM</th>\n      <th>ZBH</th>\n      <th>ZBRA</th>\n      <th>ZTS</th>\n    </tr>\n    <tr>\n      <th>Date</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2016-07-05</th>\n      <td>41.086147</td>\n      <td>27.802404</td>\n      <td>21.811762</td>\n      <td>43.881737</td>\n      <td>NaN</td>\n      <td>34.040821</td>\n      <td>23.633333</td>\n      <td>99.734428</td>\n      <td>94.730003</td>\n      <td>47.280487</td>\n      <td>...</td>\n      <td>761400</td>\n      <td>12197600</td>\n      <td>2405100</td>\n      <td>3443800</td>\n      <td>10744100</td>\n      <td>1519300</td>\n      <td>3534670</td>\n      <td>1225082</td>\n      <td>994500</td>\n      <td>2655400</td>\n    </tr>\n    <tr>\n      <th>2016-07-06</th>\n      <td>41.762302</td>\n      <td>27.245010</td>\n      <td>21.935753</td>\n      <td>44.909328</td>\n      <td>NaN</td>\n      <td>35.240551</td>\n      <td>23.583332</td>\n      <td>100.104797</td>\n      <td>95.180000</td>\n      <td>47.365887</td>\n      <td>...</td>\n      <td>749900</td>\n      <td>4701500</td>\n      <td>2133700</td>\n      <td>3545100</td>\n      <td>13144400</td>\n      <td>1487000</td>\n      <td>4323089</td>\n      <td>1892934</td>\n      <td>1239900</td>\n      <td>3451600</td>\n    </tr>\n    <tr>\n      <th>2016-07-07</th>\n      <td>41.715351</td>\n      <td>28.254087</td>\n      <td>22.029907</td>\n      <td>44.951851</td>\n      <td>NaN</td>\n      <td>35.698002</td>\n      <td>23.530001</td>\n      <td>99.381676</td>\n      <td>95.139999</td>\n      <td>47.784378</td>\n      <td>...</td>\n      <td>591100</td>\n      <td>4601500</td>\n      <td>1999500</td>\n      <td>4183700</td>\n      <td>12240700</td>\n      <td>1499400</td>\n      <td>4921497</td>\n      <td>1528108</td>\n      <td>1104400</td>\n      <td>2338000</td>\n    </tr>\n    <tr>\n      <th>2016-07-08</th>\n      <td>42.710800</td>\n      <td>28.869143</td>\n      <td>22.199829</td>\n      <td>45.469181</td>\n      <td>NaN</td>\n      <td>36.155430</td>\n      <td>23.590000</td>\n      <td>101.506905</td>\n      <td>96.790001</td>\n      <td>49.313137</td>\n      <td>...</td>\n      <td>692800</td>\n      <td>5302700</td>\n      <td>2006400</td>\n      <td>4825900</td>\n      <td>9807600</td>\n      <td>1109100</td>\n      <td>5619918</td>\n      <td>1411512</td>\n      <td>743700</td>\n      <td>2852000</td>\n    </tr>\n    <tr>\n      <th>2016-07-11</th>\n      <td>42.635677</td>\n      <td>29.945484</td>\n      <td>22.268707</td>\n      <td>45.603828</td>\n      <td>NaN</td>\n      <td>36.353951</td>\n      <td>23.583332</td>\n      <td>101.815514</td>\n      <td>97.139999</td>\n      <td>49.748714</td>\n      <td>...</td>\n      <td>482600</td>\n      <td>7476100</td>\n      <td>4057100</td>\n      <td>3224900</td>\n      <td>8335700</td>\n      <td>1176500</td>\n      <td>4482080</td>\n      <td>1256909</td>\n      <td>469100</td>\n      <td>2011600</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2024-06-24</th>\n      <td>134.829773</td>\n      <td>11.160000</td>\n      <td>208.139999</td>\n      <td>172.740005</td>\n      <td>148.389999</td>\n      <td>105.300003</td>\n      <td>102.430000</td>\n      <td>307.209991</td>\n      <td>524.169983</td>\n      <td>228.460007</td>\n      <td>...</td>\n      <td>706400</td>\n      <td>2856200</td>\n      <td>1828400</td>\n      <td>2705300</td>\n      <td>16266700</td>\n      <td>1181300</td>\n      <td>2477100</td>\n      <td>1600000</td>\n      <td>428200</td>\n      <td>1885900</td>\n    </tr>\n    <tr>\n      <th>2024-06-25</th>\n      <td>134.440491</td>\n      <td>11.130000</td>\n      <td>209.070007</td>\n      <td>170.750000</td>\n      <td>150.910004</td>\n      <td>105.489998</td>\n      <td>102.150002</td>\n      <td>307.170013</td>\n      <td>526.880005</td>\n      <td>230.339996</td>\n      <td>...</td>\n      <td>432800</td>\n      <td>3150100</td>\n      <td>1489200</td>\n      <td>2312100</td>\n      <td>16213700</td>\n      <td>1218000</td>\n      <td>2367100</td>\n      <td>1339000</td>\n      <td>319000</td>\n      <td>2293400</td>\n    </tr>\n    <tr>\n      <th>2024-06-26</th>\n      <td>132.843460</td>\n      <td>11.120000</td>\n      <td>213.250000</td>\n      <td>171.149994</td>\n      <td>150.000000</td>\n      <td>104.879997</td>\n      <td>99.769997</td>\n      <td>304.619995</td>\n      <td>528.659973</td>\n      <td>227.839996</td>\n      <td>...</td>\n      <td>660900</td>\n      <td>3118800</td>\n      <td>1089700</td>\n      <td>2662900</td>\n      <td>15771800</td>\n      <td>1246700</td>\n      <td>1392500</td>\n      <td>2006000</td>\n      <td>264800</td>\n      <td>2053800</td>\n    </tr>\n    <tr>\n      <th>2024-06-27</th>\n      <td>130.557709</td>\n      <td>11.280000</td>\n      <td>214.100006</td>\n      <td>168.990005</td>\n      <td>151.610001</td>\n      <td>104.650002</td>\n      <td>101.019997</td>\n      <td>303.190002</td>\n      <td>546.760010</td>\n      <td>226.679993</td>\n      <td>...</td>\n      <td>414500</td>\n      <td>3772000</td>\n      <td>1266600</td>\n      <td>2470800</td>\n      <td>16812700</td>\n      <td>829900</td>\n      <td>1355500</td>\n      <td>2052500</td>\n      <td>303700</td>\n      <td>4164700</td>\n    </tr>\n    <tr>\n      <th>2024-06-28</th>\n      <td>129.389877</td>\n      <td>11.330000</td>\n      <td>210.619995</td>\n      <td>171.520004</td>\n      <td>151.630005</td>\n      <td>103.910004</td>\n      <td>100.889999</td>\n      <td>303.410004</td>\n      <td>555.539978</td>\n      <td>228.259995</td>\n      <td>...</td>\n      <td>784100</td>\n      <td>5567500</td>\n      <td>2199400</td>\n      <td>3726700</td>\n      <td>24565900</td>\n      <td>2197600</td>\n      <td>5819000</td>\n      <td>2774600</td>\n      <td>417900</td>\n      <td>4189600</td>\n    </tr>\n  </tbody>\n</table>\n<p>2010 rows × 3012 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df=df.stack()\ndf\n# this will create a more resonable table","metadata":{"execution":{"iopub.status.busy":"2024-07-09T18:42:54.704483Z","iopub.execute_input":"2024-07-09T18:42:54.704859Z","iopub.status.idle":"2024-07-09T18:42:54.918994Z","shell.execute_reply.started":"2024-07-09T18:42:54.704832Z","shell.execute_reply":"2024-07-09T18:42:54.918007Z"},"trusted":true},"execution_count":35,"outputs":[{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"Price               Adj Close       Close        High         Low        Open  \\\nDate       Ticker                                                               \n2016-07-05 A        41.086147   43.750000   44.349998   43.630001   44.310001   \n           AAL      27.802404   28.930000   29.160000   28.190001   29.090000   \n           AAPL     21.811762   23.747499   23.850000   23.615000   23.847500   \n           ABBV     43.881737   61.919998   62.709999   61.770000   62.500000   \n           ABT      34.040821   39.439999   39.560001   39.209999   39.310001   \n...                       ...         ...         ...         ...         ...   \n2024-06-28 XYL     135.630005  135.630005  137.990005  134.300003  136.639999   \n           YUM     132.460007  132.460007  132.990005  131.720001  132.509995   \n           ZBH     108.529999  108.529999  109.580002  107.379997  108.550003   \n           ZBRA    308.929993  308.929993  314.040009  306.160004  309.000000   \n           ZTS     173.360001  173.360001  177.070007  173.029999  176.460007   \n\nPrice                   Volume  \nDate       Ticker               \n2016-07-05 A         1813500.0  \n           AAL       9467000.0  \n           AAPL    110820800.0  \n           ABBV      6293600.0  \n           ABT      10029300.0  \n...                        ...  \n2024-06-28 XYL       2197600.0  \n           YUM       5819000.0  \n           ZBH       2774600.0  \n           ZBRA       417900.0  \n           ZTS       4189600.0  \n\n[989314 rows x 6 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Price</th>\n      <th>Adj Close</th>\n      <th>Close</th>\n      <th>High</th>\n      <th>Low</th>\n      <th>Open</th>\n      <th>Volume</th>\n    </tr>\n    <tr>\n      <th>Date</th>\n      <th>Ticker</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">2016-07-05</th>\n      <th>A</th>\n      <td>41.086147</td>\n      <td>43.750000</td>\n      <td>44.349998</td>\n      <td>43.630001</td>\n      <td>44.310001</td>\n      <td>1813500.0</td>\n    </tr>\n    <tr>\n      <th>AAL</th>\n      <td>27.802404</td>\n      <td>28.930000</td>\n      <td>29.160000</td>\n      <td>28.190001</td>\n      <td>29.090000</td>\n      <td>9467000.0</td>\n    </tr>\n    <tr>\n      <th>AAPL</th>\n      <td>21.811762</td>\n      <td>23.747499</td>\n      <td>23.850000</td>\n      <td>23.615000</td>\n      <td>23.847500</td>\n      <td>110820800.0</td>\n    </tr>\n    <tr>\n      <th>ABBV</th>\n      <td>43.881737</td>\n      <td>61.919998</td>\n      <td>62.709999</td>\n      <td>61.770000</td>\n      <td>62.500000</td>\n      <td>6293600.0</td>\n    </tr>\n    <tr>\n      <th>ABT</th>\n      <td>34.040821</td>\n      <td>39.439999</td>\n      <td>39.560001</td>\n      <td>39.209999</td>\n      <td>39.310001</td>\n      <td>10029300.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">2024-06-28</th>\n      <th>XYL</th>\n      <td>135.630005</td>\n      <td>135.630005</td>\n      <td>137.990005</td>\n      <td>134.300003</td>\n      <td>136.639999</td>\n      <td>2197600.0</td>\n    </tr>\n    <tr>\n      <th>YUM</th>\n      <td>132.460007</td>\n      <td>132.460007</td>\n      <td>132.990005</td>\n      <td>131.720001</td>\n      <td>132.509995</td>\n      <td>5819000.0</td>\n    </tr>\n    <tr>\n      <th>ZBH</th>\n      <td>108.529999</td>\n      <td>108.529999</td>\n      <td>109.580002</td>\n      <td>107.379997</td>\n      <td>108.550003</td>\n      <td>2774600.0</td>\n    </tr>\n    <tr>\n      <th>ZBRA</th>\n      <td>308.929993</td>\n      <td>308.929993</td>\n      <td>314.040009</td>\n      <td>306.160004</td>\n      <td>309.000000</td>\n      <td>417900.0</td>\n    </tr>\n    <tr>\n      <th>ZTS</th>\n      <td>173.360001</td>\n      <td>173.360001</td>\n      <td>177.070007</td>\n      <td>173.029999</td>\n      <td>176.460007</td>\n      <td>4189600.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>989314 rows × 6 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.index.names = ['date', 'ticker']\n\ndf.columns = df.columns.str.lower()\n\ndf","metadata":{"execution":{"iopub.status.busy":"2024-07-09T18:43:15.109403Z","iopub.execute_input":"2024-07-09T18:43:15.110556Z","iopub.status.idle":"2024-07-09T18:43:15.129309Z","shell.execute_reply.started":"2024-07-09T18:43:15.110515Z","shell.execute_reply":"2024-07-09T18:43:15.128038Z"},"trusted":true},"execution_count":36,"outputs":[{"execution_count":36,"output_type":"execute_result","data":{"text/plain":"Price               adj close       close        high         low        open  \\\ndate       ticker                                                               \n2016-07-05 A        41.086147   43.750000   44.349998   43.630001   44.310001   \n           AAL      27.802404   28.930000   29.160000   28.190001   29.090000   \n           AAPL     21.811762   23.747499   23.850000   23.615000   23.847500   \n           ABBV     43.881737   61.919998   62.709999   61.770000   62.500000   \n           ABT      34.040821   39.439999   39.560001   39.209999   39.310001   \n...                       ...         ...         ...         ...         ...   \n2024-06-28 XYL     135.630005  135.630005  137.990005  134.300003  136.639999   \n           YUM     132.460007  132.460007  132.990005  131.720001  132.509995   \n           ZBH     108.529999  108.529999  109.580002  107.379997  108.550003   \n           ZBRA    308.929993  308.929993  314.040009  306.160004  309.000000   \n           ZTS     173.360001  173.360001  177.070007  173.029999  176.460007   \n\nPrice                   volume  \ndate       ticker               \n2016-07-05 A         1813500.0  \n           AAL       9467000.0  \n           AAPL    110820800.0  \n           ABBV      6293600.0  \n           ABT      10029300.0  \n...                        ...  \n2024-06-28 XYL       2197600.0  \n           YUM       5819000.0  \n           ZBH       2774600.0  \n           ZBRA       417900.0  \n           ZTS       4189600.0  \n\n[989314 rows x 6 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Price</th>\n      <th>adj close</th>\n      <th>close</th>\n      <th>high</th>\n      <th>low</th>\n      <th>open</th>\n      <th>volume</th>\n    </tr>\n    <tr>\n      <th>date</th>\n      <th>ticker</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">2016-07-05</th>\n      <th>A</th>\n      <td>41.086147</td>\n      <td>43.750000</td>\n      <td>44.349998</td>\n      <td>43.630001</td>\n      <td>44.310001</td>\n      <td>1813500.0</td>\n    </tr>\n    <tr>\n      <th>AAL</th>\n      <td>27.802404</td>\n      <td>28.930000</td>\n      <td>29.160000</td>\n      <td>28.190001</td>\n      <td>29.090000</td>\n      <td>9467000.0</td>\n    </tr>\n    <tr>\n      <th>AAPL</th>\n      <td>21.811762</td>\n      <td>23.747499</td>\n      <td>23.850000</td>\n      <td>23.615000</td>\n      <td>23.847500</td>\n      <td>110820800.0</td>\n    </tr>\n    <tr>\n      <th>ABBV</th>\n      <td>43.881737</td>\n      <td>61.919998</td>\n      <td>62.709999</td>\n      <td>61.770000</td>\n      <td>62.500000</td>\n      <td>6293600.0</td>\n    </tr>\n    <tr>\n      <th>ABT</th>\n      <td>34.040821</td>\n      <td>39.439999</td>\n      <td>39.560001</td>\n      <td>39.209999</td>\n      <td>39.310001</td>\n      <td>10029300.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">2024-06-28</th>\n      <th>XYL</th>\n      <td>135.630005</td>\n      <td>135.630005</td>\n      <td>137.990005</td>\n      <td>134.300003</td>\n      <td>136.639999</td>\n      <td>2197600.0</td>\n    </tr>\n    <tr>\n      <th>YUM</th>\n      <td>132.460007</td>\n      <td>132.460007</td>\n      <td>132.990005</td>\n      <td>131.720001</td>\n      <td>132.509995</td>\n      <td>5819000.0</td>\n    </tr>\n    <tr>\n      <th>ZBH</th>\n      <td>108.529999</td>\n      <td>108.529999</td>\n      <td>109.580002</td>\n      <td>107.379997</td>\n      <td>108.550003</td>\n      <td>2774600.0</td>\n    </tr>\n    <tr>\n      <th>ZBRA</th>\n      <td>308.929993</td>\n      <td>308.929993</td>\n      <td>314.040009</td>\n      <td>306.160004</td>\n      <td>309.000000</td>\n      <td>417900.0</td>\n    </tr>\n    <tr>\n      <th>ZTS</th>\n      <td>173.360001</td>\n      <td>173.360001</td>\n      <td>177.070007</td>\n      <td>173.029999</td>\n      <td>176.460007</td>\n      <td>4189600.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>989314 rows × 6 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"![Screenshot 2024-07-10 at 12.28.20 AM.png](attachment:c69d6b92-aa62-4406-ac7d-83f1e16307df.png)\n","metadata":{},"attachments":{"c69d6b92-aa62-4406-ac7d-83f1e16307df.png":{"image/png":""}}},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"\n# Garman Klass is a volatility estimator that incorporates open, low, high, and close prices of a security. Garman-Klass volatility extends Parkinson's volatility by taking into account the opening and closing price.\n\ndf['garman_klass_vol'] = ((np.log(df['high'])-np.log(df['low']))**2)/2-(2*np.log(2)-1)*((np.log(df['adj close'])-np.log(df['open']))**2)\n\n# this will add new column in df named gaman_klass_vol","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['rsi'] = df.groupby(level=1)['adj close'].transform(lambda x: pandas_ta.rsi(close=x, length=20))\n\ndf['bb_low'] = df.groupby(level=1)['adj close'].transform(lambda x: pandas_ta.bbands(close=np.log1p(x), length=20).iloc[:,0])\n                                                          \ndf['bb_mid'] = df.groupby(level=1)['adj close'].transform(lambda x: pandas_ta.bbands(close=np.log1p(x), length=20).iloc[:,1])\n                                                          \ndf['bb_high'] = df.groupby(level=1)['adj close'].transform(lambda x: pandas_ta.bbands(close=np.log1p(x), length=20).iloc[:,2])\n","metadata":{"execution":{"iopub.status.busy":"2024-07-09T19:03:24.289076Z","iopub.execute_input":"2024-07-09T19:03:24.290224Z","iopub.status.idle":"2024-07-09T19:03:32.599884Z","shell.execute_reply.started":"2024-07-09T19:03:24.290182Z","shell.execute_reply":"2024-07-09T19:03:32.598752Z"},"trusted":true},"execution_count":37,"outputs":[]},{"cell_type":"code","source":"df","metadata":{"execution":{"iopub.status.busy":"2024-07-09T19:03:42.294152Z","iopub.execute_input":"2024-07-09T19:03:42.294556Z","iopub.status.idle":"2024-07-09T19:03:42.316426Z","shell.execute_reply.started":"2024-07-09T19:03:42.294524Z","shell.execute_reply":"2024-07-09T19:03:42.315278Z"},"trusted":true},"execution_count":38,"outputs":[{"execution_count":38,"output_type":"execute_result","data":{"text/plain":"Price               adj close       close        high         low        open  \\\ndate       ticker                                                               \n2016-07-05 A        41.086147   43.750000   44.349998   43.630001   44.310001   \n           AAL      27.802404   28.930000   29.160000   28.190001   29.090000   \n           AAPL     21.811762   23.747499   23.850000   23.615000   23.847500   \n           ABBV     43.881737   61.919998   62.709999   61.770000   62.500000   \n           ABT      34.040821   39.439999   39.560001   39.209999   39.310001   \n...                       ...         ...         ...         ...         ...   \n2024-06-28 XYL     135.630005  135.630005  137.990005  134.300003  136.639999   \n           YUM     132.460007  132.460007  132.990005  131.720001  132.509995   \n           ZBH     108.529999  108.529999  109.580002  107.379997  108.550003   \n           ZBRA    308.929993  308.929993  314.040009  306.160004  309.000000   \n           ZTS     173.360001  173.360001  177.070007  173.029999  176.460007   \n\nPrice                   volume        rsi    bb_low    bb_mid   bb_high  \ndate       ticker                                                        \n2016-07-05 A         1813500.0        NaN       NaN       NaN       NaN  \n           AAL       9467000.0        NaN       NaN       NaN       NaN  \n           AAPL    110820800.0        NaN       NaN       NaN       NaN  \n           ABBV      6293600.0        NaN       NaN       NaN       NaN  \n           ABT      10029300.0        NaN       NaN       NaN       NaN  \n...                        ...        ...       ...       ...       ...  \n2024-06-28 XYL       2197600.0  45.676162  4.915082  4.937657  4.960231  \n           YUM       5819000.0  39.819102  4.880761  4.923641  4.966522  \n           ZBH       2774600.0  35.442075  4.654188  4.704769  4.755350  \n           ZBRA       417900.0  52.479117  5.693582  5.721439  5.749296  \n           ZTS       4189600.0  52.980608  5.120666  5.158528  5.196390  \n\n[989314 rows x 10 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Price</th>\n      <th>adj close</th>\n      <th>close</th>\n      <th>high</th>\n      <th>low</th>\n      <th>open</th>\n      <th>volume</th>\n      <th>rsi</th>\n      <th>bb_low</th>\n      <th>bb_mid</th>\n      <th>bb_high</th>\n    </tr>\n    <tr>\n      <th>date</th>\n      <th>ticker</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">2016-07-05</th>\n      <th>A</th>\n      <td>41.086147</td>\n      <td>43.750000</td>\n      <td>44.349998</td>\n      <td>43.630001</td>\n      <td>44.310001</td>\n      <td>1813500.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>AAL</th>\n      <td>27.802404</td>\n      <td>28.930000</td>\n      <td>29.160000</td>\n      <td>28.190001</td>\n      <td>29.090000</td>\n      <td>9467000.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>AAPL</th>\n      <td>21.811762</td>\n      <td>23.747499</td>\n      <td>23.850000</td>\n      <td>23.615000</td>\n      <td>23.847500</td>\n      <td>110820800.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>ABBV</th>\n      <td>43.881737</td>\n      <td>61.919998</td>\n      <td>62.709999</td>\n      <td>61.770000</td>\n      <td>62.500000</td>\n      <td>6293600.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>ABT</th>\n      <td>34.040821</td>\n      <td>39.439999</td>\n      <td>39.560001</td>\n      <td>39.209999</td>\n      <td>39.310001</td>\n      <td>10029300.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">2024-06-28</th>\n      <th>XYL</th>\n      <td>135.630005</td>\n      <td>135.630005</td>\n      <td>137.990005</td>\n      <td>134.300003</td>\n      <td>136.639999</td>\n      <td>2197600.0</td>\n      <td>45.676162</td>\n      <td>4.915082</td>\n      <td>4.937657</td>\n      <td>4.960231</td>\n    </tr>\n    <tr>\n      <th>YUM</th>\n      <td>132.460007</td>\n      <td>132.460007</td>\n      <td>132.990005</td>\n      <td>131.720001</td>\n      <td>132.509995</td>\n      <td>5819000.0</td>\n      <td>39.819102</td>\n      <td>4.880761</td>\n      <td>4.923641</td>\n      <td>4.966522</td>\n    </tr>\n    <tr>\n      <th>ZBH</th>\n      <td>108.529999</td>\n      <td>108.529999</td>\n      <td>109.580002</td>\n      <td>107.379997</td>\n      <td>108.550003</td>\n      <td>2774600.0</td>\n      <td>35.442075</td>\n      <td>4.654188</td>\n      <td>4.704769</td>\n      <td>4.755350</td>\n    </tr>\n    <tr>\n      <th>ZBRA</th>\n      <td>308.929993</td>\n      <td>308.929993</td>\n      <td>314.040009</td>\n      <td>306.160004</td>\n      <td>309.000000</td>\n      <td>417900.0</td>\n      <td>52.479117</td>\n      <td>5.693582</td>\n      <td>5.721439</td>\n      <td>5.749296</td>\n    </tr>\n    <tr>\n      <th>ZTS</th>\n      <td>173.360001</td>\n      <td>173.360001</td>\n      <td>177.070007</td>\n      <td>173.029999</td>\n      <td>176.460007</td>\n      <td>4189600.0</td>\n      <td>52.980608</td>\n      <td>5.120666</td>\n      <td>5.158528</td>\n      <td>5.196390</td>\n    </tr>\n  </tbody>\n</table>\n<p>989314 rows × 10 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}